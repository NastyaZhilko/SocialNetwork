{"version":3,"sources":["components/common/FormControls/FormControls.module.css","Utils/validators.ts","components/common/FormControls/FormControls.tsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","minLength2","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","input","restProps","Input","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","isOwner","profile","savePhoto","Preloader","s","descriptionBlock","image","src","photos","large","avatar1","type","target","files","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Post","React","memo","item","message","howManyLikes","MyPosts","postElements","profilePage","posts","map","p","id","postBlock","nav","AddPostReduxForm","onSubmit","addPostCallback","newPostText","maxLength10","reduxForm","form","handleSubmit","Field","name","component","placeholder","validate","MyPostsContainer","connect","state","dispatch","addPost","Profile","console","log","ProfileContainer","userId","this","match","params","authorizedUserIs","history","push","getProfile","getStatus","refreshProfile","prevProps","prevState","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.4d2a0ed0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2ON-w\",\"error\":\"FormControls_error__1EbmF\",\"formSummaryError\":\"FormControls_formSummaryError__1KPHr\"};","export type FieldValidatorType=(value:string)=>string|undefined\r\n\r\nexport const required:FieldValidatorType=(value)=>{\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\"\r\n}\r\n\r\nexport  const maxLengthCreator=(maxLength:number): FieldValidatorType=>(value)=>{\r\n    if (value && value.length>maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined\r\n}\r\n\r\nexport const minLength2:FieldValidatorType=(value)=>{\r\n    if (value && value.length<2) return 'Min length is 2 symbols';\r\n\r\n    return undefined\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\nimport {WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\";\r\n\r\ntype FormControlType={\r\n    meta:WrappedFieldMetaProps\r\n}\r\n\r\nexport const FormControl: React.FC<FormControlType> = ({meta:{touched, error},children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n   const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}>  <textarea {...input} {...restProps}/>\r\n    </FormControl>\r\n\r\n}\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}>\r\n        <input {...input} {...restProps}/>\r\n    </FormControl>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__Z3h2x\",\"image\":\"ProfileInfo_image__1MsHN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__UXf7B\",\"postBlock\":\"MyPosts_postBlock__1kfNr\",\"posts\":\"MyPosts_posts__nqRn6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"post_item__3KsPL\"};","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatus: (newStatus: string) => void\r\n}\r\n\r\n\r\nexport const ProfileStatusWithHooks = (props: PropsType) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const acivateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deacivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n               <b>Status:</b> <span onDoubleClick={acivateEditMode}>{props.status || 'My status'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deacivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport {ProfileType} from \"../../../Redux/profile_reducer\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport avatar1 from \"../../../assets/img/avatar1.png\";\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    savePhoto:(file: File) => void\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({isOwner, profile, status, updateStatus, savePhoto}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\nconst mainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) =>{\r\n    if(e.target.files && e.target.files.length){\r\n        savePhoto(e.target.files[0])\r\n    }\r\n}\r\n    return (\r\n        <div className='app-wrapper-content'>\r\n\r\n            <div className={s.descriptionBlock}>\r\n                <img className={s.image} src={profile.photos.large || avatar1}/>\r\n                     {isOwner && <input type={'file'} onChange={mainPhotoSelected}/>}\r\n                     <div>\r\n                         <div>\r\n                             <b>Full name:</b> {profile.fullName}\r\n                         </div>\r\n                         <div>\r\n                             <b>Looking for a lob:</b> {profile.lookingForAJob ? 'yes' : 'no'}\r\n                         </div>\r\n                         {profile.lookingForAJob &&\r\n                         <div>\r\n                             <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n                         </div>\r\n                         }\r\n                         <div>\r\n                             <b>About me:</b> {profile.aboutMe}\r\n                         </div>\r\n                     </div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileInfo","import React from \"react\";\r\nimport s from './post.module.css'\r\nimport {PostType} from \"../../../../Redux/profile_reducer\";\r\n\r\n\r\nconst Post = React.memo((props: PostType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src=\"https://vignette.wikia.nocookie.net/lisenot/images/2/25/.jpg/revision/latest/scale-to-width-down/340?cb=20150514143502&path-prefix=ru\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.howManyLikes}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/post'\r\nimport {ProfilePageType} from \"../../../Redux/profile_reducer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, minLength2, required} from \"../../../Utils/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\n\r\ntype MyPostsType = {\r\n    profilePage: ProfilePageType\r\n    addPostCallback: (newPostText: string) => void\r\n\r\n}\r\n\r\nconst MyPosts = React.memo((props: MyPostsType) => {\r\n    let postElements =\r\n        props.profilePage.posts.map(p => <Post id={p.id} message={p.message} howManyLikes={p.howManyLikes}/>)\r\n\r\n    const addNewPost = (value:any) => {\r\n        props.addPostCallback(value.newPostText)\r\n    }\r\n\r\n    return <div className={s.postBlock}>\r\n        <h3>My posts</h3>\r\n        <div className={s.nav}>\r\n            <AddPostReduxForm onSubmit={addNewPost}/>\r\n        </div>\r\n        <div className={s.posts}>\r\n            {postElements}\r\n        </div>\r\n    </div>\r\n})\r\n\r\ntype FormDataType = {\r\n    newPostText: string\r\n}\r\nconst maxLength10=maxLengthCreator(10)\r\nconst AddPostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'newPostText'} component={Textarea} placeholder={'Post message'}\r\n                validate={[required, maxLength10, minLength2]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddPostReduxForm = reduxForm<FormDataType>({form: 'dialogAddMessageForm'})(AddPostForm)\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport {addPost} from \"../../../Redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppStateType} from \"../../../Redux/redux-store\";\r\n\r\nlet mapStateToProps=(state: AppStateType)=>{\r\n    return{\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\nlet mapDispatchToProps=(dispatch: Dispatch)=> {\r\n    return {\r\n        addPostCallback: (newPostText:string) => {\r\n            dispatch(addPost(newPostText))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer=connect(mapStateToProps,mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../Redux/profile_reducer\";\r\n\r\nexport type ProfilePropsType = {\r\n    isOwner: boolean\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    savePhoto:(file: File) => void\r\n}\r\nconst Profile = (props: ProfilePropsType) => {\r\n    console.log('profile')\r\n    return (\r\n        <div className='app-wrapper-content'>\r\n            {props.profile && <ProfileInfo\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                savePhoto={props.savePhoto}\r\n            />}\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getProfile, getStatus, ProfileType, savePhoto, updateStatus} from \"../../Redux/profile_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    authorizedUserIs: number | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    getProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (file: File) => void\r\n}\r\n\r\ntype OwnPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\nclass ProfileContainer extends React.Component <PropsType> {\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserIs\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getProfile(userId as number);\r\n        this.props.getStatus(userId as number);\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType, prevState: PropsType) {\r\n        if(this.props.match.params.userId != prevProps.match.params.userId)\r\n        this.refreshProfile()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='app-wrapper-content'>\r\n                <Profile\r\n                    {...this.props}\r\n                    isOwner={!this.props.match.params.userId}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                    savePhoto={this.props.savePhoto}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserIs: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n\r\n\r\n})\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n    /* withAuthRedirect*/\r\n    //не выбрасывает на логинизацию(удалить комент)\r\n)(ProfileContainer)\r\n\r\n\r\n/*\r\nlet AuthRedirectComponent=withAuthRedirect(ProfileContainer)\r\nconst WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\nexport default connect(mapStateToProps, {getProfile})(WithUrlDataContainerComponent);\r\n*/\r\n\r\n"],"sourceRoot":""}