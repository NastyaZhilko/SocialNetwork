{"version":3,"sources":["components/Navbar/Navbar.module.css","Redux/auth-reducer.ts","components/Navbar/Navbar.tsx","components/Navbar/Music/Music.tsx","components/Navbar/News/News.tsx","components/Navbar/Settings/Settings.jsx","Utils/objects_helper.tsx","Redux/users_reducer.ts","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","Redux/app-reduser.ts","HOC/WithSuspense.tsx","components/Footer/Footer.tsx","App.tsx","serviceWorker.js","Redux/sidebar_reducer.ts","Redux/redux-store.ts","index.tsx","components/common/Preloader/Preloader.tsx","assets/img/avatar1.png","components/common/Paginator/Paginator.module.css","components/Users/Users.module.css","Api/Api.tsx","components/Header/Header.module.css","components/Footer/Footer.module.css","Redux/profile_reducer.ts","Redux/dialogs_reducer.ts","assets/preloader.gif"],"names":["module","exports","initialState","id","email","login","isAuth","captcha","authReducers","state","action","type","payload","setAuthUserData","auth","dispatch","a","authApi","me","response","data","resultCode","ResultCodesEnum","Success","password","rememberMe","message","messages","length","stopSubmit","_error","logOut","NavBar","className","s","nav","item","to","activeClassName","activeLink","active","Music","props","News","Settings","updateObjectInArray","users","itemId","objectPropName","newObjectProps","map","u","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","acceptFollow","userId","acceptUnFollow","toggleIsFetching","toggleFollowingInProgress","isFetch","requestUsers","page","usersAPI","getUsers","items","count","totalCount","_followUnFollowFlow","apiMethod","actionCreator","Paginator","totalItemCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","filter","p","cn","selectedPage","pageNumber","key","e","User","user","unFollow","follow","container","avatar","src","photos","small","avatar1","followed","disabled","some","name","status","Users","useSelector","usersPage","useDispatch","useEffect","bind","followTC","unFollowTC","UsersPage","pageTitle","Preloader","Header","React","memo","photo","header","loginBlock","alt","HeaderContainer","this","Component","connect","profilePage","profile","large","initialized","withSuspense","WrappedComponent","fallback","Footer","footer","block","ProfileContainer","lazy","DialogsContainer","Login","SuspendedDialogs","SuspendedProfile","SuspendedLogin","App","initializeApp","path","component","render","compose","withRouter","app","Boolean","window","location","hostname","match","friends","img","reducers","combineReducers","profileReducer","dialogsPage","dialogsReducer","sidebar","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","preloader","instance","axios","create","withCredentials","baseURL","headers","get","delete","post","getProfile","profileAPI","getStatus","updateStatus","put","savePhoto","photoFile","formData","FormData","append","saveProfile","posts","howManyLikes","newPostText","addPost","setStatus","file","getState","Error","Promise","reject","dialogs","newMessageText","addNewMessage"],"mappings":"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","file":"static/js/main.161f716d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__8_Igp\",\"item\":\"Navbar_item__ulGPc\",\"activeLink\":\"Navbar_activeLink__2OwnW\"};","import {authApi, ResultCodesEnum} from \"../Api/Api\";\r\nimport {ActionsTypes, ThunkType} from \"../Types/commonType\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nexport type AuthPropsType = typeof initialState\r\n\r\nlet initialState = {\r\n    id: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captcha: null\r\n}\r\nexport const authReducers = (state = initialState, action: ActionsTypes): AuthPropsType => {\r\n    switch (action.type) {\r\n        case 'samurai-network/auth/SET_USER_DATA':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id: number | null, login: string | null, email: string | null, isAuth: boolean) => (\r\n    {type: 'samurai-network/auth/SET_USER_DATA', payload: {id, email, login, isAuth}} as const)\r\n\r\nexport const auth = (): ThunkType => async (dispatch) => {\r\n    let response = await authApi.me()\r\n    if (response.data.resultCode === ResultCodesEnum.Success) {\r\n        let {id, login, email} = response.data.data\r\n        dispatch(setAuthUserData(id, login, email, true))\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: false, captcha: string): ThunkType => async (dispatch) => {\r\n    let response = await authApi.login(email, password, rememberMe, captcha)\r\n    if (response.data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(auth())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\n\r\nexport const logOut = (): ThunkType => async (dispatch) => {\r\n    let response = await authApi.logOut()\r\n    if (response.data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst NavBar = () => {\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Dialogs</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport s from './Music.module.css';\r\ntype MusicType={\r\n\r\n}\r\nconst Music=(props: MusicType)=>{\r\n    return(\r\n        <div className={s.Music}>Music</div>\r\n    )\r\n}\r\nexport default Music;","import React from \"react\";\r\n\r\nconst News=(props: any)=>{\r\n    return(\r\n        <div>News</div>\r\n    )\r\n}\r\nexport default News;","import React from \"react\";\r\n\r\nconst Settings=(props)=>{\r\n    return(\r\n        <div>Settings</div>\r\n    )\r\n}\r\nexport default Settings;\r\n","import {UsersType} from \"../Redux/users_reducer\";\r\ntype newObjPropsType = {\r\n    followed: boolean\r\n}\r\nexport let updateObjectInArray = (users:Array<UsersType>,\r\n                                  itemId:number,\r\n                                  objectPropName: keyof UsersType,\r\n                                  newObjectProps: newObjPropsType) =>{\r\n   return users.map(u => {\r\n        if (u[objectPropName] === itemId) {\r\n            return {...u, ...newObjectProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {ResultCodesEnum, usersAPI} from \"../Api/Api\";\r\nimport {ActionsTypes, ThunkType} from \"../Types/commonType\";\r\nimport {updateObjectInArray} from \"../Utils/objects_helper\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type UsersType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n\r\n    followed: boolean\r\n}\r\nexport type UsersPageType = typeof initialState\r\n\r\nlet initialState = {\r\n    users: [] as Array<UsersType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>\r\n}\r\nexport const usersReducers = (state = initialState, action: ActionsTypes): UsersPageType => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed:true})\r\n              /*  users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })*/\r\n            }\r\n\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed:false})\r\n               /* users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })*/\r\n            }\r\n\r\n        case 'SET-USERS':\r\n            debugger\r\n            return {...state, users: action.users}\r\n\r\n        case 'SET-CURRENT-PAGE':\r\n            return {...state, currentPage: action.currentPage}\r\n\r\n        case 'SET-TOTAL-USERS-COUNT':\r\n            return {...state, totalUsersCount: action.count}\r\n\r\n        case 'TOGGLE-IS-FETCHING':\r\n            return {...state, isFetching: action.isFetching}\r\n\r\n        case 'TOGGLE-IS-FOLLOWING-PROGRESS':\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetch\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const acceptFollow = (userId: number) => {\r\n    return {type: 'FOLLOW', userId} as const\r\n}\r\nexport const acceptUnFollow = (userId: number) => {\r\n    return {type: 'UNFOLLOW', userId} as const\r\n}\r\nexport const setUsers = (users: Array<UsersType>) => {\r\n    return {type: 'SET-USERS', users} as const\r\n}\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {type: 'SET-CURRENT-PAGE', currentPage} as const\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount: number) => {\r\n    return {type: 'SET-TOTAL-USERS-COUNT', count: totalUsersCount} as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {type: 'TOGGLE-IS-FETCHING', isFetching} as const\r\n}\r\nexport const toggleFollowingInProgress = (isFetch: boolean, userId: number) => {\r\n    return {type: 'TOGGLE-IS-FOLLOWING-PROGRESS', isFetch, userId} as const\r\n}\r\n\r\nexport const requestUsers = (page: number, pageSize: number): ThunkType => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n   // let data = await usersAPI.getUsers(page, pageSize)\r\n    let response =  await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(response.data.items))\r\n        dispatch(setTotalUsersCount(response.data.totalCount))\r\n}\r\n\r\n\r\n/*export const followTC = (userId: number): ThunkType => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, userId))\r\n    let response = await usersAPI.follow(userId)\r\n\r\n            if (response.data.resultCode === ResultCodesEnum.Success) {\r\n                dispatch(acceptFollow(userId))\r\n            }\r\n            dispatch(toggleFollowingInProgress(false, userId))\r\n\r\n}\r\n\r\nexport const unFollowTC = (userId: number): ThunkType => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, userId))\r\n    let response =  await usersAPI.unFollow(userId)\r\n\r\n            if (response.data.resultCode === ResultCodesEnum.Success) {\r\n                dispatch(acceptUnFollow(userId))\r\n            }\r\n            dispatch(toggleFollowingInProgress(false, userId))\r\n}*/\r\n\r\nconst _followUnFollowFlow =  async (dispatch: DispatchType,\r\n                                  userId: number,\r\n                                  apiMethod:any,\r\n                                  actionCreator: (userId: number) => ReturnType<typeof acceptFollow>\r\n                                      | ReturnType<typeof acceptUnFollow> ) => {\r\n    dispatch(toggleFollowingInProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userId))\r\n}\r\n\r\nexport const followTC = (userId: number): ThunkType => async (dispatch) => {\r\n    _followUnFollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), acceptFollow)\r\n}\r\n\r\nexport const unFollowTC = (userId: number): ThunkType => async (dispatch) => {\r\n    _followUnFollowFlow(dispatch, userId, usersAPI.unFollow.bind(usersAPI), acceptUnFollow)\r\n}\r\ntype DispatchType = Dispatch<ActionsTypes>\r\n","import React, {useState} from 'react';\r\nimport s from \"./Paginator.module.css\";\r\nimport cn from 'classnames'\r\n\r\ntype PropsType = {\r\n    totalItemCount: number\r\n    currentPage: number\r\n    pageSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n\r\n}\r\nexport const Paginator: React.FC<PropsType> = ({\r\n                                                   totalItemCount, currentPage,\r\n                                                   pageSize, onPageChanged,\r\n                                                   portionSize = 10\r\n                                               }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemCount / pageSize)\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n    return (\r\n        <div className={s.paginator}>\r\n            {portionNumber>1 &&\r\n                <button onClick={()=>{setPortionNumber(portionNumber-1)}}>PREV</button>\r\n            }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map(p => {\r\n\r\n                return <span className={ cn({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n                })}\r\n            { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport avatar1 from \"../../assets/img/avatar1.png\";\r\nimport {UsersType} from \"../../Redux/users_reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    user: UsersType\r\n    followingInProgress: Array<number>\r\n    unFollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\nexport const User : React.FC<PropsType> = ({user, followingInProgress,unFollow,  follow} ) => {\r\n\r\n\r\n    return <div className={s.container}>\r\n               <span>\r\n                   <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                           <img className={s.avatar} src={user.photos.small != null ? user.photos.small : avatar1}/>\r\n                  </NavLink>\r\n                   </div>\r\n                   <div>\r\n                       {user.followed\r\n                           ? <button disabled={followingInProgress\r\n                               .some(id => id === user.id)} onClick={() => {\r\n                               unFollow(user.id)\r\n                           }}>Unfollow</button>\r\n                           : <button disabled={followingInProgress\r\n                               .some(id => id === user.id)} onClick={() => {\r\n                               follow(user.id)\r\n                           }}>Follow</button>}\r\n                   </div>\r\n               </span>\r\n                        <span>\r\n                   <span>\r\n                       <div>{user.name}</div><div>{user.status}</div>\r\n                   </span>\r\n                   <span>\r\n                        <div>{\"location.country\"}</div>\r\n                       <div>{\"location.city\"}</div>\r\n                   </span>\r\n               </span>\r\n\r\n    </div>\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {followTC, requestUsers, unFollowTC, UsersType} from \"../../Redux/users_reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\ntype PropsType = {}\r\nexport const Users: React.FC<PropsType> = ({}) => {\r\n    const totalUsersCount = useSelector<AppStateType, number>((state) => state.usersPage.totalUsersCount)\r\n    const currentPage = useSelector<AppStateType, number>((state) => state.usersPage.currentPage)\r\n    const users = useSelector<AppStateType, Array<UsersType>>((state) => state.usersPage.users)\r\n    const pageSize = useSelector<AppStateType, number>((state) => state.usersPage.pageSize)\r\n    const followingInProgress = useSelector<AppStateType, Array<number>>((state) => state.usersPage.followingInProgress)\r\n    //const filter = useSelector<AppStateType, number>((state) => state.usersPage.)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(requestUsers(currentPage, pageSize))\r\n    }, [])\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(requestUsers(pageNumber, pageSize))\r\n    }\r\n    const follow = (userId: number) => {\r\n        dispatch(followTC(userId))\r\n    }\r\n    const unFollow = (userId: number) => {\r\n        dispatch(unFollowTC(userId))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged} pageSize={pageSize}\r\n                       totalItemCount={totalUsersCount}/>\r\n            <div>\r\n                {\r\n                    users.map(u => <User\r\n                        user={u}\r\n                        followingInProgress={followingInProgress}\r\n                        follow={follow}\r\n                        unFollow={unFollow}\r\n                        key={u.id}/>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {Users} from \"./Users\";\r\n\r\n\r\n//export type PropsType = OwnPropsType & MapStateToPropsType & MapDispatchToPropsType\r\n\r\n/*type OwnPropsType = {}\r\n\r\ntype MapStateToPropsType = {\r\n    usersPage: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n}*/\r\nexport type PropsType ={\r\n    pageTitle: string\r\n}\r\nexport const UsersPage: React.FC<PropsType> = (props)=> {\r\nconst isFetching = useSelector<AppStateType, boolean>((state)=>state.usersPage.isFetching)\r\n        return <>\r\n            <h2>{props.pageTitle}</h2>\r\n            {isFetching ? <Preloader /> : null}\r\n            <Users />\r\n        </>\r\n\r\n}\r\n\r\n/*\r\nexport class UsersContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader loading={loading}/> : null}\r\n            <Users\r\n                //follow={this.props.follow}\r\n                //unFollow={this.props.unFollow}\r\n                //usersPage={this.props.usersPage}\r\n                //pageSize={this.props.pageSize}\r\n                //totalUsersCount={this.props.totalUsersCount}\r\n                //currentPage={this.props.currentPage}\r\n                //onPageChanged={this.onPageChanged}\r\n                //followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n*/\r\n\r\n/*let mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        usersPage: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}*/\r\n/*\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        usersPage: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage:getTotalCurrentPage(state),\r\n        isFetching: getTotalIsFetching(state),\r\n        followingInProgress: getTotalFollowingInProgress(state)\r\n    }\r\n}\r\nexport default compose<React.ComponentType>(\r\nconnect<MapStateToPropsType, MapDispatchToPropsType, OwnPropsType, AppStateType>(mapStateToProps, {\r\n    follow, unFollow, setCurrentPage, requestUsers\r\n}))(UsersContainer)*/\r\n","import React from \"react\";\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {ProfileType} from \"../../Redux/profile_reducer\";\r\nimport avatar1 from \"../../assets/img/avatar1.png\";\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    photo: string | undefined\r\n    logOut: () => void\r\n}\r\nconst Header: React.FC<HeaderPropsType> = React.memo(({isAuth, login, logOut, photo}) => {\r\n\r\n\r\n    return <header className={s.header}>\r\n        <div>\r\n            <img src='https://flosium.ru/imagehost/158/med_kak-razvivaetsya-cvetok-gerbery-v-domashnih-usloviyah.jpg'/>\r\n        </div>\r\n        <div className={s.loginBlock}>\r\n            {isAuth\r\n                ? <div>\r\n                    <img src={photo || avatar1} alt=\"\"/>\r\n\r\n                    {login} - <button onClick={logOut}>Log out</button>\r\n            </div>\r\n\r\n                :\r\n                <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n})\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {auth, logOut} from \"../../Redux/auth-reducer\";\r\nimport {ProfileType} from \"../../Redux/profile_reducer\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth:boolean\r\n    login:string|null\r\n    photo : string | undefined\r\n}\r\ntype MapDispatchToPropsType={\r\n    auth:()=>void\r\n    logOut:()=>void\r\n}\r\ntype OwnPropsType = MapStateToPropsType & MapDispatchToPropsType\r\ntype PropsType=OwnPropsType\r\nclass HeaderContainer extends React.Component <PropsType>{\r\n\r\n    render() {\r\n\r\n        return <Header {...this.props}\r\n                       isAuth={this.props.isAuth}\r\n                       logOut={this.props.logOut}\r\n                       login={this.props.login}\r\n                       photo={this.props.photo}\r\n        />\r\n    }\r\n}\r\nconst mapStateToProps=(state: AppStateType):MapStateToPropsType=>\r\n    ({isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        photo: state.profilePage.profile?.photos.large\r\n    })\r\n\r\nexport default connect(mapStateToProps,{auth, logOut})(HeaderContainer);\r\n","import {ActionsTypes, ThunkType} from \"../Types/commonType\";\r\nimport {auth} from \"./auth-reducer\";\r\n\r\n\r\nexport type PropsType = typeof initialState\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\nexport const appReducers = (state = initialState, action: ActionsTypes): PropsType => {\r\n    switch (action.type) {\r\n        case 'SET_INITIALIZED':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: 'SET_INITIALIZED'} as const)\r\n\r\nexport const initializeApp = (): ThunkType => async (dispatch) => {\r\n    await dispatch(auth())\r\n    dispatch(initializedSuccess())\r\n}\r\n\r\n\r\n","import React, {Suspense} from \"react\";\r\n\r\nexport function withSuspense <WP> (WrappedComponent: React.ComponentType<WP>)  {\r\nreturn (props: WP)=>{\r\n    return <Suspense fallback={<div>Loading...</div>}>\r\n        <WrappedComponent {...props} />\r\n    </Suspense>\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport s from './Footer.module.css';\r\n\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <div className={s.footer}>\r\n            <div className={s.block}>\r\n                Footer\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer;","import React, { Suspense } from 'react';\nimport './App.css';\nimport NavBar from \"./components/Navbar/Navbar\";\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport Music from \"./components/Navbar/Music/Music\";\nimport News from \"./components/Navbar/News/News\";\nimport Settings from \"./components/Navbar/Settings/Settings\";\nimport {UsersPage} from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/app-reduser\";\nimport {AppStateType} from \"./Redux/redux-store\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./HOC/WithSuspense\";\nimport Footer from \"./components/Footer/Footer\";\n\n\n//lazy\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\nconst Login = React.lazy(() => import(\"./components/Login/Login\"));\n\n//suspended\nexport const SuspendedDialogs = withSuspense(DialogsContainer);\nexport const SuspendedProfile = withSuspense(ProfileContainer);\nexport const SuspendedLogin = withSuspense(Login);\n\ntype MapDispatchToPropsType = {\n    initializeApp: () => void\n    initialized:boolean\n}\ntype MapStateToPropsType = {\n    initialized:boolean\n}\n\ntype OwnPropsType = MapStateToPropsType & MapDispatchToPropsType\ntype PropsType = OwnPropsType\n\n\nclass App extends React.Component<PropsType> {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if(!this.props.initialized){\n            // @ts-ignore\n            return <Preloader />\n        }\n        return (\n            <BrowserRouter>\n                <div className='app-wrapper'>\n                    <HeaderContainer/>\n                    <div className='navigation'>\n                        <NavBar/>\n                        {/*<Sidebar />*/}\n                    </div>\n                    <div className='app-wrapper-content'>\n                        <Route path='/music' component={Music}/>\n                        <Route path='/news' component={News}/>\n                        <Route path='/settings' component={Settings}/>\n                        <Route path='/dialogs' render={() => <SuspendedDialogs/>}/>\n                        <Route path='/profile/:userId?' render={() => <SuspendedProfile/>}/>\n                        <Route path='/users' render={() => <UsersPage pageTitle={'Samurai'}/>}/>\n                        <Route path='/login' render={() => <SuspendedLogin/>}/>\n                    </div>\n                    <Footer/>\n                </div>\n            </BrowserRouter>)\n    }\n}\nconst MapStateToProps=(state:AppStateType):MapStateToPropsType=>({\n    initialized:state.app.initialized\n})\n\nexport default compose<React.ComponentType>(\n    withRouter,\n    connect(MapStateToProps, {initializeApp}))(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {ActionsTypes} from \"../Types/commonType\";\r\n\r\n\r\nexport type FriendsType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n}\r\nexport type SidebarType = {\r\n    friends: Array<FriendsType>\r\n}\r\nlet initialState = {\r\n    friends: [\r\n        {\r\n            id: 1,\r\n            name: 'Lera',\r\n            img: 'https://hvost.news/upload/resize_cache/iblock/8b8/750_400_1/pochemu_kotenok_lizhet_volosy_i_zaryvaetsja_v_nih.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Nick',\r\n            img: 'https://irecommend.ru/sites/default/files/product-images/8170/x_1bfe8ccb.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Sasha',\r\n            img: 'https://cdn.iz.ru/sites/default/files/styles/1920x1080/public/article-2019-10/3_2.jpg?itok=490tTVov'\r\n        }\r\n    ],\r\n}\r\nexport const sidebarReducer = (state: SidebarType = initialState, action: ActionsTypes) => {\r\n    return state\r\n}","import {applyMiddleware, combineReducers, createStore, Store} from \"redux\";\r\nimport {profileReducer} from \"./profile_reducer\";\r\nimport {sidebarReducer} from \"./sidebar_reducer\";\r\nimport {dialogsReducer} from \"./dialogs_reducer\";\r\nimport {usersReducers} from \"./users_reducer\";\r\nimport {authReducers} from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport {appReducers} from \"./app-reduser\";\r\n\r\n\r\n/*export type StoreType = {\r\n    profilePage: ProfilePageType\r\n    dialogsPage: DialogsPageType\r\n    sidebar: SidebarType\r\n    usersPage: UsersPageType\r\n    getState: () => AppStateType\r\n    subscribe: (observer: () => void) => void\r\n    dispatch: Dispatch\r\n    auth: AuthPropsType\r\n}*/\r\nlet reducers = combineReducers(\r\n    {\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        sidebar: sidebarReducer,\r\n        usersPage: usersReducers,\r\n        auth: authReducers,\r\n        app: appReducers,\r\n        form: formReducer\r\n    }\r\n);\r\n\r\nexport type AppStateType = ReturnType<typeof reducers>\r\n\r\nexport let store: Store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\ntype Window = typeof window & { store: Store }\r\n(window as Window).store = store;\r\nexport default store;","import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/redux-store\";\n\n\n\nReactDOM.render(\n        <BrowserRouter>\n            <Provider\n               store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>,\n        document.getElementById('root')\n    );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\n/*import preloader from \"../../../assets/images/preloader.gif\";*/\r\nimport preloader from \"../../../assets/preloader.gif\";\r\n\r\n\r\nconst Preloader=()=>{\r\n    return    <img src={preloader}/>\r\n}\r\nexport default Preloader","module.exports = __webpack_public_path__ + \"static/media/avatar1.498d600c.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__9OQqy\",\"pageNumber\":\"Paginator_pageNumber__2Xff8\",\"selectedPage\":\"Paginator_selectedPage__2EAXe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__3RTIw\",\"avatar\":\"Users_avatar__3rKsv\",\"selectedPage\":\"Users_selectedPage__3jfWm\"};","import axios from \"axios\";\r\nimport {PhotosType, ProfileType} from \"../Redux/profile_reducer\";\r\nimport {UsersType} from \"../Redux/users_reducer\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"5562f413-fdfb-4253-9584-34a31cc657d3\"\r\n    }\r\n})\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n    CaptchaIsRequired = 10\r\n\r\n}\r\n\r\nexport type  ResponseUserType = {\r\n    items: UsersType[]\r\n    totalCount: number\r\n    error: null | string\r\n}\r\n\r\nexport type FieldErrorType = {\r\n    field: string\r\n    message: string\r\n}\r\nexport type BaseOperationResponseType<T> = {\r\n    resultCode: ResultCodesEnum\r\n    fieldsErrors: FieldErrorType\r\n    messages: string[]\r\n    data: T\r\n}\r\n\r\ntype MeDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n    isAuth: boolean\r\n}\r\nexport type LoginResponseDataType = {\r\n    userId: number\r\n}\r\ntype SavePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}\r\ntype SaveProfileResponseDataType={\r\n    profile: ProfileType\r\n}\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<ResponseUserType>(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n\r\n    unFollow(id: number) {\r\n        return instance.delete<BaseOperationResponseType<UsersType>>(`follow/${id}`)\r\n    },\r\n    follow(id: number) {\r\n        debugger\r\n        return instance.post<BaseOperationResponseType<UsersType>>(`follow/${id}`)\r\n    },\r\n    getProfile(userId: number) {\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n    getProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/` + userId)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<BaseOperationResponseType<{}>>(`profile/status/`, {status})\r\n    },\r\n    savePhoto(photoFile: File) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put<BaseOperationResponseType<SavePhotoResponseDataType>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile (profile: ProfileType){\r\n        return instance.put<BaseOperationResponseType<SaveProfileResponseDataType>>(`profile` , profile)\r\n    }\r\n}\r\n\r\n\r\nexport const authApi = {\r\n    me() {\r\n        return instance.get<BaseOperationResponseType<MeDataType>>(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: false, captcha: string) {\r\n        return instance.post<BaseOperationResponseType<LoginResponseDataType>>(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha\r\n        })\r\n    },\r\n    logOut() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2tyyt\",\"loginBlock\":\"Header_loginBlock__1OQkB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3nFLa\"};","import {profileAPI, ResultCodesEnum, usersAPI} from \"../Api/Api\";\r\nimport {ActionsTypes, ThunkType} from \"../Types/commonType\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nexport type PhotosType = {\r\n    small: string | null\r\n    large: string\r\n}\r\nexport type ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\n\r\nexport type ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n    aboutMe: string\r\n}\r\nexport type ProfilePageType = typeof initialState\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    howManyLikes: number\r\n\r\n}\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', howManyLikes: 10},\r\n        {id: 2, message: 'It is my first post?', howManyLikes: 15}\r\n    ] as PostType[],\r\n    profile: null as ProfileType | null,\r\n    status: ''\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action: ActionsTypes): ProfilePageType => {\r\n    switch (action.type) {\r\n        case 'ADD-POST':\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {\r\n                    id: 3,\r\n                    message: action.newPostText,\r\n                    howManyLikes: 0\r\n                }]\r\n            }\r\n\r\n        case   'SET-USER-PROFILE': {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n\r\n            }\r\n        }\r\n        case  'SET-STATUS': {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n\r\n            }\r\n        }\r\n\r\n        case  'SAVE-PHOTO-SUCCESS': {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos} as ProfileType\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostText: string) => {\r\n    return {type: 'ADD-POST', newPostText} as const\r\n}\r\n\r\nexport const setUsersProfile = (profile: ProfileType) => {\r\n    return {type: 'SET-USER-PROFILE', profile} as const\r\n}\r\n\r\nexport const setStatus = (status: string) => {\r\n    return {type: 'SET-STATUS', status} as const\r\n}\r\n\r\nexport const savePhotoSuccess = (photos: PhotosType) => {\r\n    return {type: 'SAVE-PHOTO-SUCCESS', photos} as const\r\n}\r\n\r\nexport const getProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId)\r\n    dispatch(setUsersProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch,\r\n                                                                       getState) => {\r\n    const response = await profileAPI.saveProfile(profile)\r\n    const userId = getState().auth.id\r\n    if (response.data.resultCode === ResultCodesEnum.Success) {\r\n        if (userId != null) {\r\n            dispatch(getProfile(userId))\r\n        } else {\r\n            throw new Error(\"userId can't be null\")\r\n        }\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile',{_error: response.data.messages[0]}))\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n}","import {ActionsTypes} from \"../Types/commonType\";\r\n\r\n\r\nexport type DialogsPageType = typeof initialState\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n}\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hello'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'What do you do'},\r\n        {id: 4, message: 'My dog is the best friend'},\r\n        {id: 5, message: 'The best day!'}\r\n\r\n    ] as Array<MessageType>,\r\n\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: 'Lera',\r\n            img: 'https://www.sb.by/upload/resize_cache/slam.image/iblock/558/558ebd06b5552debf362edd774b92920.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Sasha',\r\n            img: 'https://i.pinimg.com/originals/8e/b0/fd/8eb0fdac7230089db2fa51f53e53397e.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Kesha',\r\n            img: 'https://www.belanta.vet/vet-blog/wp-content/uploads/2018/08/bulterer_07.jpg'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Dasha',\r\n            img: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSNdbepu0Mk7TjGMAibWXRBh5Zn1lXAWFLtVg&usqp=CAU'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Pasha',\r\n            img: 'https://cameralabs.org/images/jamp/page/d07d78d2fbbd361944e4a80341a9931b_L.jpg'\r\n        }\r\n    ] as Array<DialogType>\r\n}\r\nexport const dialogsReducer = (state= initialState, action: ActionsTypes):DialogsPageType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SEND-MESSAGE':\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: action.newMessageText}]\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport let addNewMessage = (newMessageText:string) => {\r\n    return {\r\n        type: 'SEND-MESSAGE',\r\n        newMessageText\r\n    } as const\r\n}\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/preloader.0ad6a0ce.gif\";"],"sourceRoot":""}