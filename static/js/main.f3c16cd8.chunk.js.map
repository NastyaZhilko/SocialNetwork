{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Navbar/Navbar.tsx","components/Navbar/Music/Music.tsx","components/Navbar/News/News.tsx","components/Navbar/Settings/Settings.jsx","Utils/objects_helper.tsx","Redux/users_reducer.ts","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","Redux/app-reduser.ts","HOC/WithSuspense.tsx","App.tsx","serviceWorker.js","Redux/sidebar_reducer.ts","Redux/redux-store.ts","index.tsx","Redux/auth-reducer.ts","components/common/Preloader/Preloader.tsx","components/common/Paginator/Paginator.module.css","components/Users/Users.module.css","components/Header/Header.module.css","Redux/profile_reducer.ts","Api/Api.tsx","assets/img/avatar1.png","Redux/dialogs_reducer.ts","assets/preloader.gif"],"names":["module","exports","NavBar","className","s","nav","item","to","activeClassName","activeLink","active","Music","props","News","Settings","updateObjectInArray","users","itemId","objectPropName","newObjectProps","map","u","initialState","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","acceptFollow","userId","type","acceptUnFollow","toggleIsFetching","toggleFollowingInProgress","isFetch","requestUsers","page","dispatch","a","usersAPI","getUsers","response","data","items","count","totalCount","_followUnFollowFlow","apiMethod","actionCreator","resultCode","ResultCodesEnum","Success","Paginator","totalItemCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","filter","p","cn","selectedPage","pageNumber","key","e","User","user","unFollow","follow","container","id","avatar","src","photos","small","avatar1","followed","disabled","some","name","status","Users","useSelector","state","usersPage","useDispatch","useEffect","bind","followTC","unFollowTC","UsersPage","pageTitle","Preloader","Header","React","memo","isAuth","login","logOut","header","loginBlock","HeaderContainer","this","Component","connect","auth","initialized","withSuspense","WrappedComponent","fallback","ProfileContainer","lazy","DialogsContainer","Login","SuspendedDialogs","SuspendedProfile","SuspendedLogin","App","initializeApp","path","component","render","compose","withRouter","app","Boolean","window","location","hostname","match","friends","img","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","action","authReducers","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","email","captcha","payload","setAuthUserData","authApi","me","password","rememberMe","messages","length","stopSubmit","_error","preloader","posts","howManyLikes","profile","newPostText","addPost","setStatus","getProfile","getStatus","profileAPI","updateStatus","savePhoto","file","instance","axios","create","withCredentials","baseURL","headers","get","delete","post","put","photoFile","formData","FormData","append","dialogs","newMessageText","addNewMessage"],"mappings":"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","file":"static/js/main.f3c16cd8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__8_Igp\",\"item\":\"Navbar_item__ulGPc\",\"activeLink\":\"Navbar_activeLink__2OwnW\"};","import React from \"react\";\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst NavBar = () => {\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Dialogs</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport s from './Music.module.css';\r\ntype MusicType={\r\n\r\n}\r\nconst Music=(props: MusicType)=>{\r\n    return(\r\n        <div className={s.Music}>Music</div>\r\n    )\r\n}\r\nexport default Music;","import React from \"react\";\r\n\r\nconst News=(props: any)=>{\r\n    return(\r\n        <div>News</div>\r\n    )\r\n}\r\nexport default News;","import React from \"react\";\r\n\r\nconst Settings=(props)=>{\r\n    return(\r\n        <div>Settings</div>\r\n    )\r\n}\r\nexport default Settings;\r\n","import {UsersType} from \"../Redux/users_reducer\";\r\ntype newObjPropsType = {\r\n    followed: boolean\r\n}\r\nexport let updateObjectInArray = (users:Array<UsersType>,\r\n                                  itemId:number,\r\n                                  objectPropName: keyof UsersType,\r\n                                  newObjectProps: newObjPropsType) =>{\r\n   return users.map(u => {\r\n        if (u[objectPropName] === itemId) {\r\n            return {...u, ...newObjectProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {ResultCodesEnum, usersAPI} from \"../Api/Api\";\r\nimport {ActionsTypes, ThunkType} from \"../Types/commonType\";\r\nimport {updateObjectInArray} from \"../Utils/objects_helper\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type UsersType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n\r\n    followed: boolean\r\n}\r\nexport type UsersPageType = typeof initialState\r\n\r\nlet initialState = {\r\n    users: [] as Array<UsersType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>\r\n}\r\nexport const usersReducers = (state = initialState, action: ActionsTypes): UsersPageType => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed:true})\r\n              /*  users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })*/\r\n            }\r\n\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed:false})\r\n               /* users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })*/\r\n            }\r\n\r\n        case 'SET-USERS':\r\n            debugger\r\n            return {...state, users: action.users}\r\n\r\n        case 'SET-CURRENT-PAGE':\r\n            return {...state, currentPage: action.currentPage}\r\n\r\n        case 'SET-TOTAL-USERS-COUNT':\r\n            return {...state, totalUsersCount: action.count}\r\n\r\n        case 'TOGGLE-IS-FETCHING':\r\n            return {...state, isFetching: action.isFetching}\r\n\r\n        case 'TOGGLE-IS-FOLLOWING-PROGRESS':\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetch\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const acceptFollow = (userId: number) => {\r\n    return {type: 'FOLLOW', userId} as const\r\n}\r\nexport const acceptUnFollow = (userId: number) => {\r\n    return {type: 'UNFOLLOW', userId} as const\r\n}\r\nexport const setUsers = (users: Array<UsersType>) => {\r\n    return {type: 'SET-USERS', users} as const\r\n}\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {type: 'SET-CURRENT-PAGE', currentPage} as const\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount: number) => {\r\n    return {type: 'SET-TOTAL-USERS-COUNT', count: totalUsersCount} as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {type: 'TOGGLE-IS-FETCHING', isFetching} as const\r\n}\r\nexport const toggleFollowingInProgress = (isFetch: boolean, userId: number) => {\r\n    return {type: 'TOGGLE-IS-FOLLOWING-PROGRESS', isFetch, userId} as const\r\n}\r\n\r\nexport const requestUsers = (page: number, pageSize: number): ThunkType => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n   // let data = await usersAPI.getUsers(page, pageSize)\r\n    let response =  await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(response.data.items))\r\n        dispatch(setTotalUsersCount(response.data.totalCount))\r\n}\r\n\r\n\r\n/*export const followTC = (userId: number): ThunkType => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, userId))\r\n    let response = await usersAPI.follow(userId)\r\n\r\n            if (response.data.resultCode === ResultCodesEnum.Success) {\r\n                dispatch(acceptFollow(userId))\r\n            }\r\n            dispatch(toggleFollowingInProgress(false, userId))\r\n\r\n}\r\n\r\nexport const unFollowTC = (userId: number): ThunkType => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, userId))\r\n    let response =  await usersAPI.unFollow(userId)\r\n\r\n            if (response.data.resultCode === ResultCodesEnum.Success) {\r\n                dispatch(acceptUnFollow(userId))\r\n            }\r\n            dispatch(toggleFollowingInProgress(false, userId))\r\n}*/\r\n\r\nconst _followUnFollowFlow =  async (dispatch: DispatchType,\r\n                                  userId: number,\r\n                                  apiMethod:any,\r\n                                  actionCreator: (userId: number) => ReturnType<typeof acceptFollow>\r\n                                      | ReturnType<typeof acceptUnFollow> ) => {\r\n    dispatch(toggleFollowingInProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userId))\r\n}\r\n\r\nexport const followTC = (userId: number): ThunkType => async (dispatch) => {\r\n    _followUnFollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), acceptFollow)\r\n}\r\n\r\nexport const unFollowTC = (userId: number): ThunkType => async (dispatch) => {\r\n    _followUnFollowFlow(dispatch, userId, usersAPI.unFollow.bind(usersAPI), acceptUnFollow)\r\n}\r\ntype DispatchType = Dispatch<ActionsTypes>\r\n","import React, {useState} from 'react';\r\nimport s from \"./Paginator.module.css\";\r\nimport cn from 'classnames'\r\n\r\ntype PropsType = {\r\n    totalItemCount: number\r\n    currentPage: number\r\n    pageSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n\r\n}\r\nexport const Paginator: React.FC<PropsType> = ({\r\n                                                   totalItemCount, currentPage,\r\n                                                   pageSize, onPageChanged,\r\n                                                   portionSize = 10\r\n                                               }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemCount / pageSize)\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n    return (\r\n        <div className={s.paginator}>\r\n            {portionNumber>1 &&\r\n                <button onClick={()=>{setPortionNumber(portionNumber-1)}}>PREV</button>\r\n            }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map(p => {\r\n\r\n                return <span className={ cn({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n                })}\r\n            { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport avatar1 from \"../../assets/img/avatar1.png\";\r\nimport {UsersType} from \"../../Redux/users_reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    user: UsersType\r\n    followingInProgress: Array<number>\r\n    unFollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\nexport const User : React.FC<PropsType> = ({user, followingInProgress,unFollow,  follow} ) => {\r\n\r\n\r\n    return <div className={s.container}>\r\n               <span>\r\n                   <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                           <img className={s.avatar} src={user.photos.small != null ? user.photos.small : avatar1}/>\r\n                  </NavLink>\r\n                   </div>\r\n                   <div>\r\n                       {user.followed\r\n                           ? <button disabled={followingInProgress\r\n                               .some(id => id === user.id)} onClick={() => {\r\n                               unFollow(user.id)\r\n                           }}>Unfollow</button>\r\n                           : <button disabled={followingInProgress\r\n                               .some(id => id === user.id)} onClick={() => {\r\n                               follow(user.id)\r\n                           }}>Follow</button>}\r\n                   </div>\r\n               </span>\r\n                        <span>\r\n                   <span>\r\n                       <div>{user.name}</div><div>{user.status}</div>\r\n                   </span>\r\n                   <span>\r\n                        <div>{\"location.country\"}</div>\r\n                       <div>{\"location.city\"}</div>\r\n                   </span>\r\n               </span>\r\n\r\n    </div>\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {followTC, requestUsers, unFollowTC, UsersType} from \"../../Redux/users_reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\ntype PropsType = {}\r\nexport const Users: React.FC<PropsType> = ({}) => {\r\n    const totalUsersCount = useSelector<AppStateType, number>((state) => state.usersPage.totalUsersCount)\r\n    const currentPage = useSelector<AppStateType, number>((state) => state.usersPage.currentPage)\r\n    const users = useSelector<AppStateType, Array<UsersType>>((state) => state.usersPage.users)\r\n    const pageSize = useSelector<AppStateType, number>((state) => state.usersPage.pageSize)\r\n    const followingInProgress = useSelector<AppStateType, Array<number>>((state) => state.usersPage.followingInProgress)\r\n    //const filter = useSelector<AppStateType, number>((state) => state.usersPage.)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(requestUsers(currentPage, pageSize))\r\n    }, [])\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(requestUsers(pageNumber, pageSize))\r\n    }\r\n    const follow = (userId: number) => {\r\n        dispatch(followTC(userId))\r\n    }\r\n    const unFollow = (userId: number) => {\r\n        dispatch(unFollowTC(userId))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged} pageSize={pageSize}\r\n                       totalItemCount={totalUsersCount}/>\r\n            <div>\r\n                {\r\n                    users.map(u => <User\r\n                        user={u}\r\n                        followingInProgress={followingInProgress}\r\n                        follow={follow}\r\n                        unFollow={unFollow}\r\n                        key={u.id}/>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {Users} from \"./Users\";\r\n\r\n\r\n//export type PropsType = OwnPropsType & MapStateToPropsType & MapDispatchToPropsType\r\n\r\n/*type OwnPropsType = {}\r\n\r\ntype MapStateToPropsType = {\r\n    usersPage: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n}*/\r\nexport type PropsType ={\r\n    pageTitle: string\r\n}\r\nexport const UsersPage: React.FC<PropsType> = (props)=> {\r\nconst isFetching = useSelector<AppStateType, boolean>((state)=>state.usersPage.isFetching)\r\n        return <>\r\n            <h2>{props.pageTitle}</h2>\r\n            {isFetching ? <Preloader /> : null}\r\n            <Users />\r\n        </>\r\n\r\n}\r\n\r\n/*\r\nexport class UsersContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader loading={loading}/> : null}\r\n            <Users\r\n                //follow={this.props.follow}\r\n                //unFollow={this.props.unFollow}\r\n                //usersPage={this.props.usersPage}\r\n                //pageSize={this.props.pageSize}\r\n                //totalUsersCount={this.props.totalUsersCount}\r\n                //currentPage={this.props.currentPage}\r\n                //onPageChanged={this.onPageChanged}\r\n                //followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n*/\r\n\r\n/*let mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        usersPage: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}*/\r\n/*\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        usersPage: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage:getTotalCurrentPage(state),\r\n        isFetching: getTotalIsFetching(state),\r\n        followingInProgress: getTotalFollowingInProgress(state)\r\n    }\r\n}\r\nexport default compose<React.ComponentType>(\r\nconnect<MapStateToPropsType, MapDispatchToPropsType, OwnPropsType, AppStateType>(mapStateToProps, {\r\n    follow, unFollow, setCurrentPage, requestUsers\r\n}))(UsersContainer)*/\r\n","import React from \"react\";\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype HeaderPropsType={\r\n    isAuth:boolean\r\n    login:string|null\r\n    logOut:()=>void\r\n}\r\nconst Header: React.FC<HeaderPropsType> =React.memo(({isAuth, login, logOut})=> {\r\n\r\n  return  <header className={s.header}>\r\n        <img src='https://flosium.ru/imagehost/158/med_kak-razvivaetsya-cvetok-gerbery-v-domashnih-usloviyah.jpg'/>\r\n  <div className={s.loginBlock}>\r\n      {isAuth\r\n          ? <div>{login} - <button onClick={logOut}>Log out</button> </div>\r\n          :\r\n      <NavLink to={'/login'}>Login</NavLink>}\r\n  </div>\r\n  </header>\r\n})\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {auth, logOut} from \"../../Redux/auth-reducer\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth:boolean\r\n    login:string|null\r\n}\r\ntype MapDispatchToPropsType={\r\n    auth:()=>void\r\n    logOut:()=>void\r\n}\r\ntype OwnPropsType = MapStateToPropsType & MapDispatchToPropsType\r\ntype PropsType=OwnPropsType\r\nclass HeaderContainer extends React.Component <PropsType>{\r\n\r\n    render() {\r\n\r\n        return <Header {...this.props} isAuth={this.props.isAuth} logOut={this.props.logOut} login={this.props.login}/>\r\n    }\r\n}\r\nconst mapStateToProps=(state: AppStateType):MapStateToPropsType=>\r\n    ({isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    })\r\n\r\nexport default connect(mapStateToProps,{auth, logOut})(HeaderContainer);\r\n","import {ActionsTypes, ThunkType} from \"../Types/commonType\";\r\nimport {auth} from \"./auth-reducer\";\r\n\r\n\r\nexport type PropsType = typeof initialState\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\nexport const appReducers = (state = initialState, action: ActionsTypes): PropsType => {\r\n    switch (action.type) {\r\n        case 'SET_INITIALIZED':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: 'SET_INITIALIZED'} as const)\r\n\r\nexport const initializeApp = (): ThunkType => async (dispatch) => {\r\n    await dispatch(auth())\r\n    dispatch(initializedSuccess())\r\n}\r\n\r\n\r\n","import React, {Suspense} from \"react\";\r\n\r\nexport function withSuspense <WP> (WrappedComponent: React.ComponentType<WP>)  {\r\nreturn (props: WP)=>{\r\n    return <Suspense fallback={<div>Loading...</div>}>\r\n        <WrappedComponent {...props} />\r\n    </Suspense>\r\n    }\r\n}\r\n","import React, { Suspense } from 'react';\nimport './App.css';\nimport NavBar from \"./components/Navbar/Navbar\";\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport Music from \"./components/Navbar/Music/Music\";\nimport News from \"./components/Navbar/News/News\";\nimport Settings from \"./components/Navbar/Settings/Settings\";\nimport {UsersPage} from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/app-reduser\";\nimport {AppStateType} from \"./Redux/redux-store\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./HOC/WithSuspense\";\n\n\n//lazy\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\nconst Login = React.lazy(() => import(\"./components/Login/Login\"));\n\n//suspended\nexport const SuspendedDialogs = withSuspense(DialogsContainer);\nexport const SuspendedProfile = withSuspense(ProfileContainer);\nexport const SuspendedLogin = withSuspense(Login);\n\ntype MapDispatchToPropsType = {\n    initializeApp: () => void\n    initialized:boolean\n}\ntype MapStateToPropsType = {\n    initialized:boolean\n}\n\ntype OwnPropsType = MapStateToPropsType & MapDispatchToPropsType\ntype PropsType = OwnPropsType\n\n\nclass App extends React.Component<PropsType> {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if(!this.props.initialized){\n            // @ts-ignore\n            return <Preloader />\n        }\n        return (\n            <BrowserRouter>\n                <div className='app-wrapper'>\n                    <HeaderContainer/>\n                    <div className='navigation'>\n                        <NavBar/>\n                        {/*<Sidebar />*/}\n                    </div>\n                    <div className='app-wrapper-content'>\n                        <Route path='/music' component={Music}/>\n                        <Route path='/news' component={News}/>\n                        <Route path='/settings' component={Settings}/>\n\n                        <Route path='/dialogs' render={() => <SuspendedDialogs/>}/>\n                        <Route path='/profile/:userId?' render={() => <SuspendedProfile/>}/>\n                        <Route path='/users' render={() => <UsersPage pageTitle={'Samurai'}/>}/>\n                        <Route path='/login' render={() => <SuspendedLogin/>}/>\n                    </div>\n                </div>\n            </BrowserRouter>)\n    }\n}\nconst MapStateToProps=(state:AppStateType):MapStateToPropsType=>({\n    initialized:state.app.initialized\n})\n\nexport default compose<React.ComponentType>(\n    withRouter,\n    connect(MapStateToProps, {initializeApp}))(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {ActionsTypes} from \"../Types/commonType\";\r\n\r\n\r\nexport type FriendsType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n}\r\nexport type SidebarType = {\r\n    friends: Array<FriendsType>\r\n}\r\nlet initialState = {\r\n    friends: [\r\n        {\r\n            id: 1,\r\n            name: 'Lera',\r\n            img: 'https://hvost.news/upload/resize_cache/iblock/8b8/750_400_1/pochemu_kotenok_lizhet_volosy_i_zaryvaetsja_v_nih.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Nick',\r\n            img: 'https://irecommend.ru/sites/default/files/product-images/8170/x_1bfe8ccb.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Sasha',\r\n            img: 'https://cdn.iz.ru/sites/default/files/styles/1920x1080/public/article-2019-10/3_2.jpg?itok=490tTVov'\r\n        }\r\n    ],\r\n}\r\nexport const sidebarReducer = (state: SidebarType = initialState, action: ActionsTypes) => {\r\n    return state\r\n}","import {applyMiddleware, combineReducers, createStore, Store} from \"redux\";\r\nimport {profileReducer} from \"./profile_reducer\";\r\nimport {sidebarReducer} from \"./sidebar_reducer\";\r\nimport {dialogsReducer} from \"./dialogs_reducer\";\r\nimport {usersReducers} from \"./users_reducer\";\r\nimport {authReducers} from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport {appReducers} from \"./app-reduser\";\r\n\r\n\r\n/*export type StoreType = {\r\n    profilePage: ProfilePageType\r\n    dialogsPage: DialogsPageType\r\n    sidebar: SidebarType\r\n    usersPage: UsersPageType\r\n    getState: () => AppStateType\r\n    subscribe: (observer: () => void) => void\r\n    dispatch: Dispatch\r\n    auth: AuthPropsType\r\n}*/\r\nlet reducers = combineReducers(\r\n    {\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        sidebar: sidebarReducer,\r\n        usersPage: usersReducers,\r\n        auth: authReducers,\r\n        app: appReducers,\r\n        form: formReducer\r\n    }\r\n);\r\n\r\nexport type AppStateType = ReturnType<typeof reducers>\r\n\r\nexport let store: Store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\ntype Window = typeof window & { store: Store }\r\n(window as Window).store = store;\r\nexport default store;","import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/redux-store\";\n\n\n\nReactDOM.render(\n        <BrowserRouter>\n            <Provider\n               store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>,\n        document.getElementById('root')\n    );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {authApi, ResultCodesEnum} from \"../Api/Api\";\r\nimport {ActionsTypes, ThunkType} from \"../Types/commonType\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nexport type AuthPropsType = typeof initialState\r\n\r\nlet initialState = {\r\n    id: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captcha: null\r\n}\r\nexport const authReducers = (state = initialState, action: ActionsTypes): AuthPropsType => {\r\n    switch (action.type) {\r\n        case 'samurai-network/auth/SET_USER_DATA':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id: number | null, login: string | null, email: string | null, isAuth: boolean) => (\r\n    {type: 'samurai-network/auth/SET_USER_DATA', payload: {id, email, login, isAuth}} as const)\r\n\r\nexport const auth = (): ThunkType => async (dispatch) => {\r\n    let response = await authApi.me()\r\n    if (response.data.resultCode === ResultCodesEnum.Success) {\r\n        let {id, login, email} = response.data.data\r\n        dispatch(setAuthUserData(id, login, email, true))\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: false, captcha: string): ThunkType => async (dispatch) => {\r\n    let response = await authApi.login(email, password, rememberMe, captcha)\r\n    if (response.data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(auth())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\n\r\nexport const logOut = (): ThunkType => async (dispatch) => {\r\n    let response = await authApi.logOut()\r\n    if (response.data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\n/*import preloader from \"../../../assets/images/preloader.gif\";*/\r\nimport preloader from \"../../../assets/preloader.gif\";\r\n\r\n\r\nconst Preloader=()=>{\r\n    return    <img src={preloader}/>\r\n}\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__9OQqy\",\"pageNumber\":\"Paginator_pageNumber__2Xff8\",\"selectedPage\":\"Paginator_selectedPage__2EAXe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__3RTIw\",\"avatar\":\"Users_avatar__3rKsv\",\"selectedPage\":\"Users_selectedPage__3jfWm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2tyyt\",\"loginBlock\":\"Header_loginBlock__1OQkB\"};","import {profileAPI, ResultCodesEnum, usersAPI} from \"../Api/Api\";\r\nimport {ActionsTypes, ThunkType} from \"../Types/commonType\";\r\n\r\nexport type PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\n\r\nexport type ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: {\r\n        github: string\r\n        vk: string\r\n        facebook: string\r\n        instagram: string\r\n        twitter: string\r\n        website: string\r\n        youtube: string\r\n        mainLink: string\r\n    }\r\n    photos: PhotosType\r\n    aboutMe: string\r\n}\r\nexport type ProfilePageType = typeof initialState\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    howManyLikes: number\r\n\r\n}\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', howManyLikes: 10},\r\n        {id: 2, message: 'It is my first post?', howManyLikes: 15}\r\n    ] as PostType[],\r\n    profile: null as ProfileType | null,\r\n    status: ''\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action: ActionsTypes): ProfilePageType => {\r\n    switch (action.type) {\r\n        case 'ADD-POST':\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {\r\n                    id: 3,\r\n                    message: action.newPostText,\r\n                    howManyLikes: 0\r\n                }]\r\n            }\r\n\r\n        case   'SET-USER-PROFILE': {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n\r\n            }\r\n        }\r\n        case  'SET-STATUS': {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n\r\n            }\r\n        }\r\n\r\n        case  'SAVE-PHOTO-SUCCESS': {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos} as ProfileType }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostText: string) => {\r\n    return { type: 'ADD-POST', newPostText} as const\r\n}\r\n\r\nexport const setUsersProfile = (profile: ProfileType) => {\r\n    return {type: 'SET-USER-PROFILE', profile} as const\r\n}\r\n\r\nexport const setStatus = (status: string) => {\r\n    return {type: 'SET-STATUS', status} as const\r\n}\r\n\r\nexport const savePhotoSuccess = (photos: PhotosType) => {\r\n    return {type: 'SAVE-PHOTO-SUCCESS', photos} as const\r\n}\r\n\r\nexport const getProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n            dispatch(setUsersProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}","import axios from \"axios\";\r\nimport {PhotosType, ProfileType} from \"../Redux/profile_reducer\";\r\nimport {UsersType} from \"../Redux/users_reducer\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"f86ed128-1eb6-4390-9695-099af06721b7\"\r\n    }\r\n})\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n    CaptchaIsRequired = 10\r\n\r\n}\r\n\r\nexport type  ResponseUserType = {\r\n    items: UsersType[]\r\n    totalCount: number\r\n    error: null | string\r\n}\r\n\r\nexport type FieldErrorType = {\r\n    field: string\r\n    message: string\r\n}\r\nexport type BaseOperationResponseType<T> = {\r\n    resultCode: ResultCodesEnum\r\n    fieldsErrors: FieldErrorType\r\n    messages: string[]\r\n    data: T\r\n}\r\n\r\ntype MeDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n    isAuth: boolean\r\n}\r\nexport type LoginResponseDataType = {\r\n    userId: number\r\n}\r\ntype SavePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<ResponseUserType>(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n\r\n    unFollow(id: number) {\r\n        return instance.delete<BaseOperationResponseType<UsersType>>(`follow/${id}`)\r\n    },\r\n    follow(id: number) {\r\n        debugger\r\n        return instance.post<BaseOperationResponseType<UsersType>>(`follow/${id}`)\r\n    },\r\n    getProfile(userId: number) {\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n    getProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/` + userId)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<BaseOperationResponseType<{}>>(`profile/status/`, {status})\r\n    },\r\n    savePhoto(photoFile: File) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put<BaseOperationResponseType<SavePhotoResponseDataType>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const authApi = {\r\n    me() {\r\n        return instance.get<BaseOperationResponseType<MeDataType>>(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: false, captcha: string) {\r\n        return instance.post<BaseOperationResponseType<LoginResponseDataType>>(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha\r\n        })\r\n    },\r\n    logOut() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}","module.exports = __webpack_public_path__ + \"static/media/avatar1.498d600c.png\";","import {ActionsTypes} from \"../Types/commonType\";\r\n\r\n\r\nexport type DialogsPageType = typeof initialState\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n}\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hello'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'What do you do'},\r\n        {id: 4, message: 'My dog is the best friend'},\r\n        {id: 5, message: 'The best day!'}\r\n\r\n    ] as Array<MessageType>,\r\n\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: 'Lera',\r\n            img: 'https://www.sb.by/upload/resize_cache/slam.image/iblock/558/558ebd06b5552debf362edd774b92920.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Sasha',\r\n            img: 'https://i.pinimg.com/originals/8e/b0/fd/8eb0fdac7230089db2fa51f53e53397e.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Kesha',\r\n            img: 'https://www.belanta.vet/vet-blog/wp-content/uploads/2018/08/bulterer_07.jpg'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Dasha',\r\n            img: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSNdbepu0Mk7TjGMAibWXRBh5Zn1lXAWFLtVg&usqp=CAU'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Pasha',\r\n            img: 'https://cameralabs.org/images/jamp/page/d07d78d2fbbd361944e4a80341a9931b_L.jpg'\r\n        }\r\n    ] as Array<DialogType>\r\n}\r\nexport const dialogsReducer = (state= initialState, action: ActionsTypes):DialogsPageType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SEND-MESSAGE':\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: action.newMessageText}]\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport let addNewMessage = (newMessageText:string) => {\r\n    return {\r\n        type: 'SEND-MESSAGE',\r\n        newMessageText\r\n    } as const\r\n}\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/preloader.0ad6a0ce.gif\";"],"sourceRoot":""}